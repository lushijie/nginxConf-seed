
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/plain;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    charset utf-8;

    #server_name_in_redirect on;   #自动添加斜线”/”语句

    server {
        listen       80;
        server_name  localhost;


######################################## 【root 与 alias 的区别】 ######################################
        location ^~ /static {
             root /home/www.test.com;
        }
        #http://120.27.105.225/static/a.gif
        #访问/static 去 root:/home/www.test.com + /static目录下寻找

        location ^~ /aliasstatic {
           alias /home/www.test.com/static;
        }
        #http://120.27.105.225/aliasstatic/a.gif
        #访问/aliasstatic 去 alias 目录下寻找

##########################################【 = 精确匹配 】#######################################


        location = /71team { #精确匹配会第一个被处理。如果发现精确匹配，nginx停止搜索其他匹配。
            echo '规则1-1 = /71team';
        }
        location = /71team123 {#精确匹配会第一个被处理。如果发现精确匹配，nginx停止搜索其他匹配。
            echo '规则1-2 = /71team123';
        }

        #输入与输出
        #http://120.27.105.225/71team         规则1-1 = /71team
        #http://120.27.105.225/71team123      规则1-2 = /71team123
        #http://120.27.105.225/71team12       Not Found
        #http://120.27.105.225/71team/        Not Found HTTP段  #server_name_in_redirect on;   #自动添加斜线”/”语句


#########################################【^~ 常规字符串开头匹配】##################################

        location ^~ /72team {
            echo '规则2-1 ^~ /72team';
        }
        location ^~ /72team123 {
            echo '规则2-2 ^~ /72team123';
        }

        #输入与输出
        #http://120.27.105.225/72team         规则2-1 ^~ /72team
        #http://120.27.105.225/72team123      规则2-2 ^~ /72team123
        #http://120.27.105.225/72team12       规则2-1 ^~ /72team
        #http://120.27.105.225/72team/        规则2-1 ^~ /72team

        #^~表示普通字符匹配,长的块规则将被优先和查询匹配，也就是说如果该项匹配还需去看有没有更长的匹配

#######################################【空 默认普通匹配】###########################################

        location  /75team {
            echo '规则5-1 /75team';
        }

        location  /75team123 {
            echo '规则5-2 /75team123';
        }

        #输入与输出 无前缀
        #http://120.27.105.225/75team         规则5-1 /75team
        #http://120.27.105.225/75team123      规则5-2 /75team123
        #http://120.27.105.225/75team12       规则5-1 /75team
        #http://120.27.105.225/75team/        规则5-1 /75team

        #/ 表示普通字符匹配, 长的块规则将被优先和查询匹配，也就是说如果该项匹配还需去看有没有更长的匹配


####################################【 ~* 不区分大小写正则匹配】################################
        location ~* /73team {#如果找到相应的匹配，则nginx停止搜索其他匹配。 !~*
            echo '规则3-1 ~* /73team';
        }
        location ~* /73team123 {#如果找到相应的匹配，则nginx停止搜索其他匹配
            echo '规则3-2 ~* /73team123';
        }

        #输入与输出
        #http://120.27.105.225/73team         规则3-1 ~* /73team
        #http://120.27.105.225/73team123      规则3-1 ~* /73team
        #http://120.27.105.225/73team12       规则3-1 ~* /73team
        #http://120.27.105.225/73team/        规则3-1 ~* /73team

        #"~*"的指令，如果找到相应的匹配，则nginx停止搜索其他匹配

#####################################【~ 区分大小写正则匹配】###############################
        location ~ /74team {#如果找到相应的匹配，则nginx停止搜索其他匹配  !~
            echo '规则4-1 ~ /74team ';
        }

        location ~ /74team123 {#如果找到相应的匹配，则nginx停止搜索其他匹配
            echo '规则4-2 ~ /74team123';
        }

        #输入与输出
        #http://120.27.105.225/74team         规则4-1 ~ /74team
        #http://120.27.105.225/74team123      规则4-1 ~ /74team
        #http://120.27.105.225/74team12       规则4-1 ~ /74team
        #http://120.27.105.225/74team/        规则4-1 ~ /74team

        #"~"指令，如果找到相应的匹配，则nginx停止搜索其他匹配


#########################################【优先级比较】#########################################################

        # location = /76team {
        #     echo '规则76-1 = /76team';
        # }
        # location ^~ /76team {
        #     echo '规则76-2 ^~ /76team';
        # }
                # # 与规则76-2 ^~ /76team重复
                # location  /76team {# 与规则76-2 ^~ /76team重复
                #     echo '规则76-3 /76team';
                # }
        location ~ /76team {
            echo '规则76-5 ~ /76team ';
        }
        location ~* /76team {
            echo '规则76-4 ~* /76team';
        }


        #http://120.27.105.225/76team                            规则76-1 = /76team (把76-1放到最后也是输出76-1)
        #把76-1注释 http://120.27.105.225/76team                  规则76-2 ^~ /76team
        #把76-4移动到76-2规则之前 http://120.27.105.225/76team      规则76-2 ^~ /76team
        #把76-2注释 http://120.27.105.225/76team                  规则76-4 ~* /76team
        #把76-5移动到76-4之前 http://120.27.105.225/76team         规则76-5 ~* /76team
        #把76-4注释 http://120.27.105.225/76team                  规则76-5 ~ /76team
        #结论 = 》 ^~ 》（~*=~）

        #但结论中的最后两个具有截断的作用如果置换最后两者的顺序，将看到 ~*《 ~ 所以最后两者优先级相同，看谁放到前面


#########################################【~*=~ 》空 优先级比较】###############################################

        location ~* /78team {
            echo '规则78-2 ~* /78team';
        }

        location  /78team {
            echo '规则78-1 /78team';
        }

        #http://120.27.105.225/78team                          规则78-2 ~* /78team
        #置换两者顺序 http://120.27.105.225/78team             规则77-2 ~* /78team
        #结论 ~* 优先级高于 空

############################################【优先级结论】########################################################
    # = 》 ^~ 》（~*=~）》空 【^~会与空有重复冲突】

    }

}
