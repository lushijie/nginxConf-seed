#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/plain;
    charset  utf-8;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    rewrite_log on;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

################################【核心内置变量】#######################################

        location /eee {

            set $a 'lushijie';
            echo $a;

            echo \r\n;

            echo arg_id： $arg_id;
            echo arg_id： 请求中的的参数名，即“?”后面的arg_name=arg_value形式的arg_name;

            echo \r\n;

            echo args：$args;
            echo args：请求中的参数值;

            echo \r\n;

            add_header  content-type 'a=test';
            echo content_type：$content_type;
            echo content_type：请求头字段???;
            # curl -i -H "Content-Type: application/json;sss=123" http://120.27.105.225/?id=123123

            echo \r\n;

            echo cookie_name：$cookie_name;
            echo cookie_name：cookie名称;

            echo \r\n;

            echo hostname：$hostname;
            echo hostname：主机名;

            echo \r\n;

            echo http_name：$http_name;
            echo http_name：匹配任意请求头字段;

            echo \r\n;

            echo https：$https;
            echo https：如果开启了SSL安全模式，值为“on”，否则为空字符串。;

            echo \r\n;

            echo is_args：$is_args;
            echo is_args：如果请求中有参数，值为“?”，否则为空字符串。;

            echo \r\n;

            echo realpath_root：$realpath_root;
            echo realpath_root：当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。;

            echo \r\n;

            echo request：$request;
            echo request：代表客户端的请求地址;

            echo \r\n;

            echo request_body：$request_body;
            echo request_body：客户端的请求主体此变量可在location中使用，将请求主体通过proxy_pass, fastcgi_pass, uwsgi_pass, 和 scgi_pass传递给下一级的代理服务器。;

            echo \r\n;

            echo request_method：$request_method;
            echo request_method：HTTP请求方法，通常为“GET”或“POST”;

            echo \r\n;

            echo request_uri：$request_uri;
            echo request_uri：这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：”/cnphp/test.php?arg=freemouse”;

            echo \r\n;

            echo scheme：$scheme;
            echo scheme：请求使用的Web协议, http或https;


            echo \r\n;

            echo uri：$uri;
            echo uri：请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值;

            echo \r\n;

            #http://nginx.org/en/docs/http/ngx_http_core_module.html
            #http://120.27.105.225/eee?tel=13299998888
        }


###################################【自定义变量】#############################################
        location /aaa {
            echo $zoo;
        }

        location /bbb {
            set $zoo 'Hello World!!!';
            echo '$zoo';
        }

        #把 /bbb 注释掉.restart error nginx: [emerg] unknown "zoo" variable
        #把 /bbb 解开注释
        #curl 120.27.105.225/bbb——> Hello Wold;
        #curl 120.27.105.225/aaa——>;
        #结论：Nginx 变量名的可见范围虽然是整个配置，但每个请求都有所有变量的独立副本
        #，或者说都有各变量用来存放值的容器的独立副本，彼此互不干扰。

        #而事实上，Nginx 变量的生命期是不可能跨越请求边界的非location。

#######################################【自定义变量2】########################################

        location /ccc {
            set $foo "I'm a good man! HAHAHA";
            rewrite ^ /ddd last;

        }

        location /ddd {
            echo '$foo';
        }
        ##curl 120.27.105.225/ccc——> Hello Wold;
        #既然是内部跳转，当前正在处理的请求就还是原来那个，只是当前的 location 发生了变化，
        #所以还是原来的那一套 Nginx 变量的容器副本。
        #而事实上，Nginx 变量的生命期是不可能跨越请求边界的非location。

##############################################################################################

        #map 不讲

##############################################################################################




        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
