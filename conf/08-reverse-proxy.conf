
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    server {
        listen       8080;
        server_name  www.test.com localhost 127.0.0.1;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        ########静态资源配置
        location ^~ static {
            root /home/www.test.com/;
        }

        # location = /aaa {
        #     add_header Content-Type "text/html; charset=UTF-8";
        #     echo  'This is 8080aaa';
        # }

        ########################################【反向代理配置】####################################################
        location / {
            proxy_pass   http://120.27.105.225:5050/;
            #proxy_pass http://127.0.0.1:$node_port$request_uri;
            # proxy_setting
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #客户端IP,Nginx负载均衡服务器IP
            #client1, proxy1, proxy2,以逗号隔开各个地址
            #如果没有"X-Forwarded-For" 请求头，则$proxy_add_x_forwarded_for等于$remote_addr

            #通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，(或者使用CDN)
            # 以上行，目的是将代理服务器收到的用户的信息传到真实服务器上
            #通过$remote_addr拿到的IP地址是反向代理服务器的iP地址。（或者CDN）



            #反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，
            #用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。
            # 1.然后在Nginx Proxy前端,也就是服务器A添加:proxy_set_header X-Forwarded-For  $remote_addr;
            # 2.或者使用nginx的-with-http-realip-module ip伪装，需要知道所有的cdn节点（ip或者ip地址段）

        }

        ########################################【反向代理跨域请求】##################################################
        location = /rank.json {
            proxy_pass  http://wan.sogou.com/api/game/shop/left_rank.json;
        }
        #http://120.27.105.225:8080/test.html
        #控制台输出 rank.json
    }

    #gzip  on;
    server {
        listen       5050;
        server_name  www.test.com localhost 127.0.0.1;

        ############################【8080反向代理到5050】#########################################
        location = /aaa {
            add_header Content-Type "text/html; charset=UTF-8";
            echo  'This is 5050aaa';
        }
        #http://120.27.105.225:8080/aaa   输出 This is 5050aaa

        location / {
            root /home/www.test.com;
            index  index.html index.htm;
        }
    }

    ###########################【不同域名同时使用80端口】#####################################
    server {
        listen 80;
        server_name www.test.com;
        location / {
            proxy_pass http://localhost:8080;
        }
    }
    server {
        listen 80;
        server_name www.test2.com;
        location / {
            proxy_pass http://localhost:5050;
        }
    }

}
